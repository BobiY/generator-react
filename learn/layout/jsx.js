//什么是jsx呢？jsx就是对js的一种加强（官方叫语法糖），使你可以在js文件中直接使用HTML标签，这就是jsx最直观的表现

<div>Hello World</div>  //这就是jsx，当然，你的这个标签是存在在js文件中而非HTML中。jsx不仅仅是这样的，他还规定了变量应该放在大括号中，这样渲染出来的才是变量的值，不然就是原样输出

const aa = "Hello World";


<div>{ aa }</div>   //就像这样子的最终结果就是 Hello World，如果是被HTML标签包括的变量，不加也会正常渲染，但渲染出来的是变量的名，而非值


<div> aa </div>     //这样最终结果就是 aa，对比这两次的结果，加不加大括号的作用就一目了然了

/*
   大括号语法一定要记牢，因为在使用React的过程中，这个语法要遍地开花，所以他就是你在jsx中走出的第一步
*/


/*
  虽然jsx与HTML由很多的相似之处，但是他们的区别也是显而易见的，最大的区别就是使用环境不同，一个在js，另一个在HTML中使用，除了这个差别，在对标签的书写方式上也是多种多样的，你不必拘泥于HTML标签在你脑袋中根深蒂固的印象，下面展示了几种你会觉得“错误”的标签，但他们在jsx中是完全正确的。
*/


1. <input type = "text"></input>
2. <div className = "div"/>
3. <image src = "sadada"></image>

/*
    上面的例子在React中都是可以正常使用的，这一点你可以自己尝试，但是不建议你这样使用，列出来的唯一目的就是让你知道他是对的，你完全可以保持你在HTML中的标签使用习惯，这样会避免很多意外错误。除此之外，你在HTML中使用的标签属性也是可以正常使用的，但是有几个你要注意，在这里class要写成className,for要写成forHtml，因为class 和 for 都是js的关键字，直接书写会导致React在解析时出现错误，这点要特别注意。style这个行内样式也用不同，下面给出一个简单的例子，因为这个在后面使用的很多，在实战中体会用法会记得更加牢靠。

*/

  <div style = {{color:"red"}}></div>


//其实jsx的终极应用就是构建一个组件，这才是真正的用武之处，下面就来说说组件。

//React 推崇的组件化开发，其实就是将一个整页面拆分成若干个小的部分，每个部分就是一个组件，页面就是由这些小组件“拼”成的
//这很类似于js的模块化开发，将功能分开，然后再组合成一个完整的系统，大家协同工作。
//这里有一点要注意，前面说React是将页面拆分，并不是将应用拆分，所以，React是一个 UI 框架 ，只有MVC 中的 V ，这跟angular和vue（虽然他也在往 UI 框架迁移的路上）
//理清楚了这个点，就可以搞开发了，再想一下，你在开发的时候，页面都能做什么，这里大致罗列一下，有助于你去体会React的神奇之处
/*
  1.页面可以用来展示数据
  2.页面可以让用户进行操作
  3.页面可以展示完整的 UI 效果（大多时候）
  //我能想起来的就这么多，也就是说，如果React达到了这三点，他就是一个合格的页面构建 UI 框架，下面就根据这三条展开我们React之旅
*/
